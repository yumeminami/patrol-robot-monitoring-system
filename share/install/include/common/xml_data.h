// Generated by gencpp from file common/xml_data.msg
// DO NOT EDIT!


#ifndef COMMON_MESSAGE_XML_DATA_H
#define COMMON_MESSAGE_XML_DATA_H

#include <ros/service_traits.h>


#include <common/xml_dataRequest.h>
#include <common/xml_dataResponse.h>


namespace common
{

struct xml_data
{

typedef xml_dataRequest Request;
typedef xml_dataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct xml_data
} // namespace common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::common::xml_data > {
  static const char* value()
  {
    return "301e9cc7244d22b9d325571195eb0275";
  }

  static const char* value(const ::common::xml_data&) { return value(); }
};

template<>
struct DataType< ::common::xml_data > {
  static const char* value()
  {
    return "common/xml_data";
  }

  static const char* value(const ::common::xml_data&) { return value(); }
};


// service_traits::MD5Sum< ::common::xml_dataRequest> should match
// service_traits::MD5Sum< ::common::xml_data >
template<>
struct MD5Sum< ::common::xml_dataRequest>
{
  static const char* value()
  {
    return MD5Sum< ::common::xml_data >::value();
  }
  static const char* value(const ::common::xml_dataRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::xml_dataRequest> should match
// service_traits::DataType< ::common::xml_data >
template<>
struct DataType< ::common::xml_dataRequest>
{
  static const char* value()
  {
    return DataType< ::common::xml_data >::value();
  }
  static const char* value(const ::common::xml_dataRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::common::xml_dataResponse> should match
// service_traits::MD5Sum< ::common::xml_data >
template<>
struct MD5Sum< ::common::xml_dataResponse>
{
  static const char* value()
  {
    return MD5Sum< ::common::xml_data >::value();
  }
  static const char* value(const ::common::xml_dataResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::xml_dataResponse> should match
// service_traits::DataType< ::common::xml_data >
template<>
struct DataType< ::common::xml_dataResponse>
{
  static const char* value()
  {
    return DataType< ::common::xml_data >::value();
  }
  static const char* value(const ::common::xml_dataResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMMON_MESSAGE_XML_DATA_H
