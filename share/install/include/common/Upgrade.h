// Generated by gencpp from file common/Upgrade.msg
// DO NOT EDIT!


#ifndef COMMON_MESSAGE_UPGRADE_H
#define COMMON_MESSAGE_UPGRADE_H

#include <ros/service_traits.h>


#include <common/UpgradeRequest.h>
#include <common/UpgradeResponse.h>


namespace common
{

struct Upgrade
{

typedef UpgradeRequest Request;
typedef UpgradeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Upgrade
} // namespace common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::common::Upgrade > {
  static const char* value()
  {
    return "d1a7d02d9af64b80a87fb39b34004f24";
  }

  static const char* value(const ::common::Upgrade&) { return value(); }
};

template<>
struct DataType< ::common::Upgrade > {
  static const char* value()
  {
    return "common/Upgrade";
  }

  static const char* value(const ::common::Upgrade&) { return value(); }
};


// service_traits::MD5Sum< ::common::UpgradeRequest> should match
// service_traits::MD5Sum< ::common::Upgrade >
template<>
struct MD5Sum< ::common::UpgradeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::common::Upgrade >::value();
  }
  static const char* value(const ::common::UpgradeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::UpgradeRequest> should match
// service_traits::DataType< ::common::Upgrade >
template<>
struct DataType< ::common::UpgradeRequest>
{
  static const char* value()
  {
    return DataType< ::common::Upgrade >::value();
  }
  static const char* value(const ::common::UpgradeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::common::UpgradeResponse> should match
// service_traits::MD5Sum< ::common::Upgrade >
template<>
struct MD5Sum< ::common::UpgradeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::common::Upgrade >::value();
  }
  static const char* value(const ::common::UpgradeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::UpgradeResponse> should match
// service_traits::DataType< ::common::Upgrade >
template<>
struct DataType< ::common::UpgradeResponse>
{
  static const char* value()
  {
    return DataType< ::common::Upgrade >::value();
  }
  static const char* value(const ::common::UpgradeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMMON_MESSAGE_UPGRADE_H
