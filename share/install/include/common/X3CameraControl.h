// Generated by gencpp from file common/X3CameraControl.msg
// DO NOT EDIT!


#ifndef COMMON_MESSAGE_X3CAMERACONTROL_H
#define COMMON_MESSAGE_X3CAMERACONTROL_H

#include <ros/service_traits.h>


#include <common/X3CameraControlRequest.h>
#include <common/X3CameraControlResponse.h>


namespace common
{

struct X3CameraControl
{

typedef X3CameraControlRequest Request;
typedef X3CameraControlResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct X3CameraControl
} // namespace common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::common::X3CameraControl > {
  static const char* value()
  {
    return "1197f65cafe4f6185711fff0c923b4bd";
  }

  static const char* value(const ::common::X3CameraControl&) { return value(); }
};

template<>
struct DataType< ::common::X3CameraControl > {
  static const char* value()
  {
    return "common/X3CameraControl";
  }

  static const char* value(const ::common::X3CameraControl&) { return value(); }
};


// service_traits::MD5Sum< ::common::X3CameraControlRequest> should match
// service_traits::MD5Sum< ::common::X3CameraControl >
template<>
struct MD5Sum< ::common::X3CameraControlRequest>
{
  static const char* value()
  {
    return MD5Sum< ::common::X3CameraControl >::value();
  }
  static const char* value(const ::common::X3CameraControlRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::X3CameraControlRequest> should match
// service_traits::DataType< ::common::X3CameraControl >
template<>
struct DataType< ::common::X3CameraControlRequest>
{
  static const char* value()
  {
    return DataType< ::common::X3CameraControl >::value();
  }
  static const char* value(const ::common::X3CameraControlRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::common::X3CameraControlResponse> should match
// service_traits::MD5Sum< ::common::X3CameraControl >
template<>
struct MD5Sum< ::common::X3CameraControlResponse>
{
  static const char* value()
  {
    return MD5Sum< ::common::X3CameraControl >::value();
  }
  static const char* value(const ::common::X3CameraControlResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::X3CameraControlResponse> should match
// service_traits::DataType< ::common::X3CameraControl >
template<>
struct DataType< ::common::X3CameraControlResponse>
{
  static const char* value()
  {
    return DataType< ::common::X3CameraControl >::value();
  }
  static const char* value(const ::common::X3CameraControlResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMMON_MESSAGE_X3CAMERACONTROL_H
