// Generated by gencpp from file common/GimbalControl.msg
// DO NOT EDIT!


#ifndef COMMON_MESSAGE_GIMBALCONTROL_H
#define COMMON_MESSAGE_GIMBALCONTROL_H

#include <ros/service_traits.h>


#include <common/GimbalControlRequest.h>
#include <common/GimbalControlResponse.h>


namespace common
{

struct GimbalControl
{

typedef GimbalControlRequest Request;
typedef GimbalControlResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GimbalControl
} // namespace common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::common::GimbalControl > {
  static const char* value()
  {
    return "d0c48081341d4177031e0d1e7e86365a";
  }

  static const char* value(const ::common::GimbalControl&) { return value(); }
};

template<>
struct DataType< ::common::GimbalControl > {
  static const char* value()
  {
    return "common/GimbalControl";
  }

  static const char* value(const ::common::GimbalControl&) { return value(); }
};


// service_traits::MD5Sum< ::common::GimbalControlRequest> should match
// service_traits::MD5Sum< ::common::GimbalControl >
template<>
struct MD5Sum< ::common::GimbalControlRequest>
{
  static const char* value()
  {
    return MD5Sum< ::common::GimbalControl >::value();
  }
  static const char* value(const ::common::GimbalControlRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::GimbalControlRequest> should match
// service_traits::DataType< ::common::GimbalControl >
template<>
struct DataType< ::common::GimbalControlRequest>
{
  static const char* value()
  {
    return DataType< ::common::GimbalControl >::value();
  }
  static const char* value(const ::common::GimbalControlRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::common::GimbalControlResponse> should match
// service_traits::MD5Sum< ::common::GimbalControl >
template<>
struct MD5Sum< ::common::GimbalControlResponse>
{
  static const char* value()
  {
    return MD5Sum< ::common::GimbalControl >::value();
  }
  static const char* value(const ::common::GimbalControlResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::GimbalControlResponse> should match
// service_traits::DataType< ::common::GimbalControl >
template<>
struct DataType< ::common::GimbalControlResponse>
{
  static const char* value()
  {
    return DataType< ::common::GimbalControl >::value();
  }
  static const char* value(const ::common::GimbalControlResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMMON_MESSAGE_GIMBALCONTROL_H
