// Generated by gencpp from file common/Mapping.msg
// DO NOT EDIT!


#ifndef COMMON_MESSAGE_MAPPING_H
#define COMMON_MESSAGE_MAPPING_H

#include <ros/service_traits.h>


#include <common/MappingRequest.h>
#include <common/MappingResponse.h>


namespace common
{

struct Mapping
{

typedef MappingRequest Request;
typedef MappingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Mapping
} // namespace common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::common::Mapping > {
  static const char* value()
  {
    return "15e6a864f16c73d6aacfe9af1cbf92ef";
  }

  static const char* value(const ::common::Mapping&) { return value(); }
};

template<>
struct DataType< ::common::Mapping > {
  static const char* value()
  {
    return "common/Mapping";
  }

  static const char* value(const ::common::Mapping&) { return value(); }
};


// service_traits::MD5Sum< ::common::MappingRequest> should match
// service_traits::MD5Sum< ::common::Mapping >
template<>
struct MD5Sum< ::common::MappingRequest>
{
  static const char* value()
  {
    return MD5Sum< ::common::Mapping >::value();
  }
  static const char* value(const ::common::MappingRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::MappingRequest> should match
// service_traits::DataType< ::common::Mapping >
template<>
struct DataType< ::common::MappingRequest>
{
  static const char* value()
  {
    return DataType< ::common::Mapping >::value();
  }
  static const char* value(const ::common::MappingRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::common::MappingResponse> should match
// service_traits::MD5Sum< ::common::Mapping >
template<>
struct MD5Sum< ::common::MappingResponse>
{
  static const char* value()
  {
    return MD5Sum< ::common::Mapping >::value();
  }
  static const char* value(const ::common::MappingResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::MappingResponse> should match
// service_traits::DataType< ::common::Mapping >
template<>
struct DataType< ::common::MappingResponse>
{
  static const char* value()
  {
    return DataType< ::common::Mapping >::value();
  }
  static const char* value(const ::common::MappingResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMMON_MESSAGE_MAPPING_H
