// Generated by gencpp from file common/ReportError.msg
// DO NOT EDIT!


#ifndef COMMON_MESSAGE_REPORTERROR_H
#define COMMON_MESSAGE_REPORTERROR_H

#include <ros/service_traits.h>


#include <common/ReportErrorRequest.h>
#include <common/ReportErrorResponse.h>


namespace common
{

struct ReportError
{

typedef ReportErrorRequest Request;
typedef ReportErrorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReportError
} // namespace common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::common::ReportError > {
  static const char* value()
  {
    return "0fc660883a6c87f1be5fe7a1f9fb2b19";
  }

  static const char* value(const ::common::ReportError&) { return value(); }
};

template<>
struct DataType< ::common::ReportError > {
  static const char* value()
  {
    return "common/ReportError";
  }

  static const char* value(const ::common::ReportError&) { return value(); }
};


// service_traits::MD5Sum< ::common::ReportErrorRequest> should match
// service_traits::MD5Sum< ::common::ReportError >
template<>
struct MD5Sum< ::common::ReportErrorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::common::ReportError >::value();
  }
  static const char* value(const ::common::ReportErrorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::ReportErrorRequest> should match
// service_traits::DataType< ::common::ReportError >
template<>
struct DataType< ::common::ReportErrorRequest>
{
  static const char* value()
  {
    return DataType< ::common::ReportError >::value();
  }
  static const char* value(const ::common::ReportErrorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::common::ReportErrorResponse> should match
// service_traits::MD5Sum< ::common::ReportError >
template<>
struct MD5Sum< ::common::ReportErrorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::common::ReportError >::value();
  }
  static const char* value(const ::common::ReportErrorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::common::ReportErrorResponse> should match
// service_traits::DataType< ::common::ReportError >
template<>
struct DataType< ::common::ReportErrorResponse>
{
  static const char* value()
  {
    return DataType< ::common::ReportError >::value();
  }
  static const char* value(const ::common::ReportErrorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMMON_MESSAGE_REPORTERROR_H
